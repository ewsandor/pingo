# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
default:
  tags:
    - docker

stages:          # List of stages for jobs, and their order of execution
  - build

build-debian:       # This job runs in the build stage, which runs first.
  stage: build
  image: debian:latest
  script:
    - echo "Installing dependencies..."
    - apt update
    - apt install -y --no-install-recommends g++ make cmake libssl-dev libpng-dev libcap2-bin
    - echo "Installing dependencies complete."
    - echo "Compiling the code..."
    - mkdir build
    - cd build
    - cmake ..
    - make
    - setcap cap_net_raw+ep pingo
    - echo "Compile complete."
  artifacts:
    paths:
      - /builds/edward/pingo/build/pingo

build-fedora:       # This job runs in the build stage, which runs first.
  stage: build
  image: fedora:latest
  script:
    - echo "Installing dependencies..."
    - dnf install -y gcc-c++ cmake openssl-devel libpng-devel
    - echo "Installing dependencies complete."
    - echo "Compiling the code..."
    - mkdir build
    - cd build
    - cmake ..
    - make
    - setcap cap_net_raw+ep pingo
    - echo "Compile complete."
  artifacts:
    paths:
      - /builds/edward/pingo/build/pingo